<Window
	x:Class="TxEditor.View.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:c="clr-namespace:TxEditor.Converters"
	xmlns:my="clr-namespace:TxEditor"
	xmlns:Tx="clr-namespace:TxLib;assembly=TxLib"
	xmlns:u="clr-namespace:Unclassified.UI"
	xmlns:v="clr-namespace:TxEditor.View"
	xmlns:vm="clr-namespace:TxEditor.ViewModel"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Controls="clr-namespace:System.Windows.Controls;assembly=MultiSelectTreeView"
	TextOptions.TextFormattingMode="Display"
	Title="{Binding DisplayName}"
	Height="296" Width="1304" UseLayoutRounding="True"
	Icon="/Images/TxFlag.ico"
	LocationChanged="Window_LocationChanged" SizeChanged="Window_SizeChanged"
	Loaded="Window_Loaded" Closed="Window_Closed"
	PreviewKeyDown="Window_PreviewKeyDown"
	x:Name="_this">

	<Window.Resources>
		<u:TextHighlightConverter x:Key="textHighlightConverter"/>
		<c:TreeNodesConverter x:Key="treeNodesConverter"/>
		<c:UnicodeInfoConverter x:Key="unicodeInfoConverter"/>
		<u:BoolToVisibilityConverter x:Key="boolVisConverter"/>
		<c:CharacterMapConverter x:Key="characterMapConverter"/>
		<c:MonospaceFontConverter x:Key="monospaceFontConverter"/>
	</Window.Resources>
	<Window.InputBindings>
		<KeyBinding Key="N" Modifiers="Control" Command="{Binding NewTextKeyCommand}" />
		<KeyBinding Key="O" Modifiers="Control" Command="{Binding LoadFileCommand}" />
		<KeyBinding Key="O" Modifiers="Control+Shift" Command="{Binding LoadFolderCommand}" />
		<KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
		<KeyBinding Key="F12" Command="{Binding GotoDefinitionCommand}" />
	</Window.InputBindings>

	<DockPanel>
		<Grid Name="ToolGrid" DockPanel.Dock="Top">
			<Grid Name="InnerToolGrid" Style="{StaticResource ToolGridStyle}" LayoutUpdated="InnerToolGrid_LayoutUpdated">
				<Grid.RowDefinitions>
					<RowDefinition Height="3"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="3"/>
					<RowDefinition Height="3"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="3"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<Rectangle Grid.Row="5" Grid.ColumnSpan="16" Fill="{StaticResource ToolGridShadowBrush}"/>

				<StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding LoadFileCommand}"
						Content="Load file" IconSource="/Images/document_open.png"
						HotkeyText="Ctrl+O" ExtendedToolTipText="Opens a new dictionary file."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="80"/>
					<u:IconButton
						Command="{Binding LoadFolderCommand}"
						Content="Load folder" IconSource="/Images/folder_open.png"
						HotkeyText="Ctrl+Shift+O" ExtendedToolTipText="Opens multiple dictionary files from a folder."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="80"/>
					<u:IconButton
						Command="{Binding SaveCommand}"
						Content="Save" IconSource="/Images/save.png"
						HotkeyText="Ctrl+S" ExtendedToolTipText="Saves all changes to the loaded dictionary file(s)."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="80"/>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="1" Margin="0,1,0,0" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding NewFileCommand}"
						Content="New" IconSource="/Images/document_create.png"
						ExtendedToolTipText="Creates an empty new dictionary."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="80"/>
					<u:IconButton
						Command="{Binding ImportFileCommand}"
						Content="Import file" IconSource="/Images/import.png"
						ExtendedToolTipText="Imports all text keys from another dictionary file into the currently loaded dictionary."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="80"/>
					<u:IconButton
						Command="{Binding ExportKeysCommand}"
						Content="Export keys" IconSource="/Images/key_export.png"
						ExtendedToolTipText="Exports the selected text keys into a new dictionary file."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="80"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0">File</TextBlock>

				<ContentControl Grid.Row="0" Grid.Column="2" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

				<u:IconButton
					Grid.Row="1" Grid.Column="3" Grid.RowSpan="2" Margin="0,0,3,0"
					Command="{Binding NewCultureCommand}"
					Content="New culture" IconSource="/Images/globe_create_22.png" Orientation="Vertical"
					ExtendedToolTipText="Adds a new culture to this dictionary."
					ToolTipService.ShowOnDisabled="True"
					Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False"/>
				<StackPanel Grid.Row="1" Grid.Column="4" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding DeleteCultureCommand}"
						Content="Delete" IconSource="/Images/globe_delete.png"
						ExtendedToolTipText="Deletes the selected culture from this dictionary. Focus a text box to select a culture."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="70"/>
					<u:IconButton
						x:Name="CultureToolsButton"
						Content="Tools▾" IconSource="/Images/globe_config.png"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="70" Click="CultureToolsButton_Click">
						<u:IconButton.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Replace culture" Command="{Binding ReplaceCultureCommand}">
									<MenuItem.Icon>
										<Image Source="/Images/gear.png" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="Insert system keys" Command="{Binding InsertSystemKeysCommand}">
									<MenuItem.Icon>
										<Image Source="/Images/Tx_16.png" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="View date and time formats" Command="{Binding ViewDateTimeFormatsCommand}">
									<MenuItem.Icon>
										<Image Source="/Images/gear.png" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</u:IconButton.ContextMenu>
					</u:IconButton>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="4" Margin="0,1,0,0" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding SetPrimaryCultureCommand}"
						Content="Set primary" IconSource="/Images/globe_check_small.png"
						ExtendedToolTipText="Sets the selected culture as the dictionary's primary culture. Focus a text box to select a culture."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="70"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0">Culture</TextBlock>

				<ContentControl Grid.Row="0" Grid.Column="5" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

				<u:IconButton
					Grid.Row="1" Grid.Column="6" Grid.RowSpan="2" Margin="0,0,3,0"
					Command="{Binding NewTextKeyCommand}"
					Content="New key" IconSource="/Images/key_create_22.png" Orientation="Vertical"
					HotkeyText="Ctrl+N" ExtendedToolTipText="Adds a new text key to the dictionary."
					ToolTipService.ShowOnDisabled="True"
					Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False"/>
				<StackPanel Grid.Row="1" Grid.Column="7" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding DeleteTextKeyCommand}"
						Content="Delete key" IconSource="/Images/key_delete.png"
						ExtendedToolTipText="Deletes the selected text key(s) from the dictionary."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="60"/>
					<u:IconButton
						Command="{Binding TextKeyWizardCommand}"
						Content="Wizard" IconSource="/Images/gear.png"
						ExtendedToolTipText="Opens the text key wizard dialog for easy adding of new text keys from existing strings in a source code."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="60"/>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="7" Margin="0,1,0,0" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding RenameTextKeyCommand}"
						Content="Rename" IconSource="/Images/rename.png"
						ExtendedToolTipText="Renames the selected text key and optionally all its subkeys."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="60"/>
					<u:IconButton
						Command="{Binding DuplicateTextKeyCommand}"
						Content="Duplicate" IconSource="/Images/key_duplicate.png"
						ExtendedToolTipText="Duplicates the selected text key to a new key name."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="60"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="6" Grid.ColumnSpan="2" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0">Text key</TextBlock>

				<ContentControl Grid.Row="0" Grid.Column="8" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

				<StackPanel Grid.Row="1" Grid.Column="9" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding NavigateBackCommand}"
						Content="Back" IconSource="/Images/back.png"
						ExtendedToolTipText="Navigates back to the previous view."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="90"/>
					<u:IconButton
						Command="{Binding NavigateForwardCommand}"
						Content="Forward" IconSource="/Images/forward.png"
						ExtendedToolTipText="Navigates forward to the next view."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="90"/>
					<u:IconButton
						Command="{Binding GotoDefinitionCommand}"
						Content="Definition" IconSource="/Images/goto_definition.png"
						HotkeyText="F12" ExtendedToolTipText="Navigates to the definition of the text key under the cursor."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" CollapsePriority="90"/>
					<u:IconToggleButton
						Content="Comment" IconSource="/Images/balloon.png"
						ExtendedToolTipText="Shows the comment input field for all text keys."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" Focusable="False"
						IsChecked="{Binding Settings.ShowComments}" CollapsePriority="90"/>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="9" Margin="0,1,0,0" Orientation="Horizontal">
					<u:IconToggleButton
						Content="Monospace" IconSource="/Images/monospace.png"
						ExtendedToolTipText="Uses a fixed-width font for all translation texts and the character map."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" Focusable="False"
						IsChecked="{Binding Settings.MonospaceFont}" CollapsePriority="90"/>
					<u:IconToggleButton
						Content="Hidden chars" IconSource="/Images/hidden_chars.png"
						ExtendedToolTipText="Shows hidden characters like spaces or line breaks in the translation input fields."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" Focusable="False"
						IsChecked="{Binding Settings.ShowHiddenChars}" CollapsePriority="90"/>
					<u:IconToggleButton
						Content="Character map" IconSource="/Images/charmap.png" ToolTip="CharMap"
						ExtendedToolTipText="Shows the character map to select characters from that you cannot type on your keyboard. Each character shows its codepoint and description in its tool tip."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" Focusable="False"
						IsChecked="{Binding Settings.ShowCharacterMap}" CollapsePriority="90"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="9" Grid.ColumnSpan="1" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0">View</TextBlock>

				<ContentControl Grid.Row="0" Grid.Column="10" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

				<StackPanel Grid.Row="1" Grid.Column="11" Orientation="Horizontal">
					<TextBlock VerticalAlignment="Center" Margin="3,0,0,0" Text="Search term:"/>
					<Grid Margin="4,0,0,0">
						<TextBox Name="SearchText" Width="150" Margin="0" Padding="2,2,14,2" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
							<TextBox.Style>
								<Style TargetType="TextBox" BasedOn="{StaticResource {x:Static ToolBar.TextBoxStyleKey}}">
									<Setter Property="BorderBrush" Value="#1C000000"/>
								</Style>
							</TextBox.Style>
						</TextBox>
						<Button
							HorizontalAlignment="Right"
							BorderBrush="{x:Null}" Background="Transparent" Focusable="False"
							Command="{Binding ClearSearchCommand}"
							Foreground="Red"
							Content="×">
							<Button.Style>
								<Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
									<Setter Property="Visibility" Value="Visible"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding SearchText}" Value="">
											<Setter Property="Visibility" Value="Hidden"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
					</Grid>
					<Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Padding="0,2" Focusable="False">▾</Button>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="11" Margin="0,1,0,0" Orientation="Horizontal">
					<u:IconToggleButton
						Content="{Tx:T 'view.filter.n problems', {Binding ProblemKeys.Count}, Default='0 problems'}"
						ExtendedToolTipText="Filters the text key list to only show keys with problems."
						ToolTipService.ShowOnDisabled="True"
						IsChecked="{Binding ProblemFilterActive}"
						Focusable="False">
						<u:IconToggleButton.Style>
							<Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
								<Setter Property="u:IconToggleButton.IconSource" Value="/Images/error_list_red.png"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding ProblemKeys.Count}" Value="0">
										<Setter Property="u:IconToggleButton.IconSource" Value="/Images/error_list.png"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</u:IconToggleButton.Style>
					</u:IconToggleButton>
					<u:IconButton
						Content="Cultures" IconSource="/Images/globe_filter.png"
						ExtendedToolTipText="Temporarily hides unused cultures from the editor fields."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="11" Grid.ColumnSpan="1" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0">Filter</TextBlock>

				<ContentControl Grid.Row="0" Grid.Column="12" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

				<StackPanel Grid.Row="1" Grid.Column="13" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding SettingsCommand}"
						Content="Settings" IconSource="/Images/gear.png"
						ExtendedToolTipText="Opens the application settings dialog."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False"/>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="13" Margin="0,1,0,0" Orientation="Horizontal">
					<u:IconButton
						Command="{Binding AboutCommand}"
						Content="About" IconSource="/Images/info.png"
						ExtendedToolTipText="Shows version and copyright information about the application."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="13" Grid.ColumnSpan="1" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0">Application</TextBlock>

				<ContentControl Grid.Row="0" Grid.Column="14" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>
			</Grid>
		</Grid>

		<Grid
			DockPanel.Dock="Top"
			Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
			Visibility="{Binding Settings.ShowCharacterMap, Converter={StaticResource boolVisConverter}}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>

			<TextBlock
				Grid.Column="0"
				VerticalAlignment="Center" Margin="5,0,1,0"
				Text="Character map"
				Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>

			<ItemsControl Grid.Column="1" Margin="5,1" ItemsSource="{Binding Settings.CharacterMap, Converter={StaticResource characterMapConverter}}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Button
							MinWidth="20"
							FontFamily="{Binding DataContext.Settings.MonospaceFont, ElementName=_this, Converter={StaticResource monospaceFontConverter}}"
							FontSize="{Binding DataContext.FontSize, ElementName=_this}"
							TextOptions.TextFormattingMode="{Binding DataContext.TextFormattingMode, ElementName=_this}"
							Content="{Binding}"
							Click="CharmapButton_Click"
							Style="{StaticResource LightButtonStyle}" Focusable="False"
							ToolTipOpening="CharMapButton_ToolTipOpening">
							<Button.ToolTip>
								<StackPanel>
									<TextBlock Text="{Binding Mode=OneWay, Converter={StaticResource unicodeInfoConverter}}"/>
									<TextBlock Text="{Binding Mode=OneWay}" FontSize="64" HorizontalAlignment="Left" Background="#10000000" TextOptions.TextFormattingMode="Ideal"/>
								</StackPanel>
							</Button.ToolTip>
						</Button>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			
			<Border
				Grid.Row="1" Grid.ColumnSpan="2"
				BorderThickness="0,0,0,1" BorderBrush="#20000000"/>
		</Grid>

		<Grid DockPanel.Dock="Bottom" Style="{StaticResource StatusGridStyle}" UseLayoutRounding="True">
			<Grid.RowDefinitions>
				<RowDefinition Height="1"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="3"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="3"/>
			</Grid.ColumnDefinitions>

			<Rectangle Grid.Row="0" Grid.ColumnSpan="16" Fill="{StaticResource StatusGridShadowBrush}"/>

			<TextBlock Grid.Row="1" Grid.Column="1" Margin="3,2" Text="{Binding StatusText}"/>

			<ContentControl Grid.Row="1" Grid.Column="2" Template="{StaticResource StatusGridLargeSeparator}" Focusable="False"/>

			<StackPanel Grid.Row="1" Grid.Column="3" Margin="3,2" Orientation="Horizontal">
				<TextBlock Margin="0,0,6,0" Text="{Binding CursorCharCodePoint}" Visibility="{Binding CursorCharVisibility}"/>
				<TextBlock Margin="0,0,6,0" Text="{Binding CursorCharName}" Visibility="{Binding CursorCharVisibility}"/>
				<TextBlock Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Text="{Binding CursorCharCategory}"/>
			</StackPanel>

			<ContentControl Grid.Row="1" Grid.Column="4" Template="{StaticResource StatusGridLargeSeparator}" Focusable="False"/>

			<StackPanel Grid.Row="1" Grid.Column="5" Orientation="Horizontal">
				<TextBlock Margin="3,2" Text="Text size"/>
				<Slider
					Width="150" Margin="3,2"
					Minimum="100" Maximum="200" IsSnapToTickEnabled="True" TickFrequency="10"
					Value="{Binding FontScale}">
					<Slider.LayoutTransform>
						<ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
					</Slider.LayoutTransform>
				</Slider>
			</StackPanel>
		</Grid>
		
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="6" />
				<ColumnDefinition Width="2*"/>
			</Grid.ColumnDefinitions>

			<Controls:MultiSelectTreeView
				Name="TextKeysTreeView"
				Grid.Row="0" Grid.Column="0"
				ItemsSource="{Binding RootTextKey.Children}"
				BorderThickness="0"
				UseLayoutRounding="False"
				SelectionChanged="TextKeysTreeView_SelectionChanged"
				KeyDown="TextKeysTreeView_KeyDown">
				<!--PreviewSelectionChanged="TextKeysTreeView_PreviewSelectionChanged"
				ContextMenuOpening="TextKeysTreeView_ContextMenuOpening"-->

				<Controls:MultiSelectTreeView.ItemContainerStyle>
					<Style TargetType="{x:Type Controls:MultiSelectTreeViewItem}">
						<Setter Property="DisplayName" Value="{Binding DisplayName, Mode=TwoWay}" />
						<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
						<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
						<Setter Property="IsVisible" Value="{Binding IsVisible, Mode=TwoWay}" />
						<Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay}" />
						<Setter Property="Remarks" Value="{Binding Remarks, Mode=TwoWay}"/>

						<Setter Property="RemarksTemplate">
							<Setter.Value>
								<DataTemplate>
									<TextBlock VerticalAlignment="Center" Margin="3,0,0,0" Foreground="#e56e5b" FontStyle="Italic" Text="{Binding}">
										<TextBlock.Style>
											<Style TargetType="TextBlock">
												<Style.Triggers>
													<DataTrigger Binding="{Binding}" Value="{x:Null}">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding}" Value="">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</DataTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Controls:MultiSelectTreeView.ItemContainerStyle>

				<Controls:MultiSelectTreeView.Resources>
					<HierarchicalDataTemplate DataType="{x:Type vm:TextKeyViewModel}" ItemsSource="{Binding Children}">
						<StackPanel Orientation="Horizontal">
							<Image Name="icon" Width="16" Height="16" Margin="0,0,2,0" Source="{Binding ImageSource}" />
							<ContentControl Margin="0,0,2,0" Focusable="False">
								<ContentControl.Content>
									<MultiBinding Converter="{StaticResource textHighlightConverter}">
										<MultiBinding.Bindings>
											<Binding Path="DisplayName" Mode="OneWay"/>
											<Binding Path="Text" ElementName="SearchText" Mode="OneWay"/>
										</MultiBinding.Bindings>
									</MultiBinding>
								</ContentControl.Content>
							</ContentControl>
						</StackPanel>
					</HierarchicalDataTemplate>
				</Controls:MultiSelectTreeView.Resources>
			</Controls:MultiSelectTreeView>

			<GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" TabIndex="9999"/>
			<Path Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"
				Fill="#50000000" Data="M0,0 H2 V2 H0z M0,4 H2 V6 H0z M0,8 H2 V10 H0z M0,12 H2 V14 H0z M0,16 H2 V18 H0z"/>

			<ContentControl Grid.Column="2" Focusable="False">
				<ContentControl.Content>
					<MultiBinding Converter="{StaticResource treeNodesConverter}">
						<!-- The list to observe must be the very first binding (index 0) for the converter to work -->
						<Binding Path="SelectedItems" ElementName="TextKeysTreeView" Mode="OneWay"/>
						<Binding Path="SelectedItems.Count" ElementName="TextKeysTreeView" Mode="OneWay"/>
					</MultiBinding>
				</ContentControl.Content>

				<ContentControl.Resources>
					<DataTemplate DataType="{x:Type vm:DetailsMessageViewModel}">
						<v:DetailsMessage/>
					</DataTemplate>

					<DataTemplate DataType="{x:Type vm:TextKeyViewModel}">
						<v:TextKeyView/>
					</DataTemplate>
				</ContentControl.Resources>
			</ContentControl>
		</Grid>
	</DockPanel>
</Window>
